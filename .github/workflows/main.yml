name: "publish"
on:
  push:
    # paths:
    #   - 'package.json'
    tags:
      - 'release-v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_ID: ${{ steps.create-release.outputs.id }}
      APP_VERSION: ${{ steps.create-release.outputs.ver }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: set app version
        id: app_ver
        run: echo "::set-output name=ver::$(node -p "require('./package.json').version")"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          body: "See the assets to download this version and install."
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  
  publish-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node ${{ needs.create-release.outputs.RELEASE_ID }}
      uses: actions/setup-node@v1
      with:
        node-version: 16
        releaseId: ${{ needs.create-release.outputs.RELEASE_ID }}
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install app dependencies and build it
      run: yarn && yarn build
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: ${{ needs.create-release.outputs.tag_name }}
        releaseName: "Release ${{ needs.create-release.outputs.tag_name }}"
        releaseBody: "See the assets to download this version and install."
        releaseId: ${{ needs.create-release.outputs.RELEASE_ID }}
